#!/usr/bin/env bash
#Every 1st line of a bas script start with #! followed by the shell that should run the script

source ../../ENVIRONMENT_VARIABLES		#Load variables/code present in a different file
echo "BIN_DIR:" $BIN_DIR			#echo -> print a string to the stdout
						#$NAME -> recal the value of a variable of name NAME
echo "PSEUDO_DIR:" $PSEUDO_DIR
echo "TMP_DIR:" $TMP_DIR
echo "Parallel command:" $RUN_COMMAND
echo "Started at: " `date`

# Prepare the files to be plotted
SAVE=Etot_vs_Ecut-script.dat				#NAME=something assign a variable of name NAME and value something (can be a string ora  number)
						#!!!!!! There must be no spaces when assigning variable
						#Use "... ..." for a string with spaces
echo -e "# Ecut(Ry)\tEnergy(Ry)" > $SAVE	# COMMAND > NAME  write the stdout of the command COMMAND into the file NAME
						#Create the file if it does not exist
						#Overwrite the file it exist
						#Use >> to append at the end of the file

# Loop over cutoff energies
for ecut in 10 20 30 40 60 80 100 120; do		#for NAME in LIST; do ... done
						#cicle the variable NAME in a list of elements

IN=graphene_script.scf.in
OUT=graphene_script.scf.out_Ecut$ecut
						#<<DELIM  ... DELIM   defines a block of text
						#Will still resolve variables values using $NAME
						#cat NAME/TEXT   read a file or string/block of text and print it into the stdout
# self-consistent calculation
cat > $IN << EOF
&CONTROL
    calculation       = 'scf'
    restart_mode      = 'from_scratch'
    prefix            = 'graphene'
    tstress           = .true.
    tprnfor           = .true.
    pseudo_dir        = "$PSEUDO_DIR"
    outdir            = "$TMP_DIR"
    verbosity         = 'high'
    disk_io = 'minimal'
    wf_collect        = .true.
/
&SYSTEM
                       ibrav = 4,
                   celldm(1) = 4.635,
                   celldm(3) = 6,
                         nat = 2,
                        ntyp = 1,
                     ecutwfc = $ecut ,
                        nbnd = 8,
                 occupations = 'smearing' ,
                     degauss = 0.01 ,
                    smearing = 'm-v' ,
/
&ELECTRONS
                 mixing_beta = 0.7 ,
/
ATOMIC_SPECIES
    C   12.01100  C.pz-vbc.UPF 
ATOMIC_POSITIONS crystal 
    C      0.000000000    0.000000000    0.500000000    
    C      0.333333333    0.666666667    0.500000000    
K_POINTS automatic
  3 3 1	0 0 0
EOF

echo -e "\tStart: " `date`
COMMAND="  $RUN_COMMAND $BIN_DIR/pw.x"
echo -e "\t\t$COMMAND < $IN > $OUT"
$COMMAND < $IN > $OUT
echo -e "\tEnd: " `date`

ENERGY=`cat $OUT | grep ! | tr -dc '0-9,-.'`		#COMMAND1 | COMMAND2   pipe stdout of COMMAND1 into the stdin of COMMAND2
							#grep TEXT   look for every line containing the text TEXT and print it in the stdout
							#tr -dc LIST  (delete complementary)  deletes every character that is not present 
							#in the list LIST
echo -e "$ecut\t\t$ENERGY" >> $SAVE

done    # end of main loop over cutoff energy

echo "Run completed at: " `date`
echo "Now run the run_plots script" 

